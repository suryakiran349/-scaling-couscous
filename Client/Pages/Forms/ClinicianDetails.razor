@using MudBlazor
@using Shared.DTOs.Scheduling
@using Shared.Enums

<MudForm Model="@model" @ref="@form" ValidationDelay="0">
    <MudGrid>
        <MudItem xs="12" sm="6">
            <MudTextField @bind-Value="model.Id" For="@(() => model.Id)" Immediate="true" Label="ID" Variant="Variant.Outlined" />
            <MudTextField @bind-Value="model.FirstName" For="@(() => model.FirstName)" Immediate="true" Label="First Name" Variant="Variant.Outlined" />
            <MudTextField @bind-Value="model.LastName" For="@(() => model.LastName)" Immediate="true" Label="Last Name" Variant="Variant.Outlined" />
            <MudTextField @bind-Value="model.Telephone" For="@(() => model.Telephone)" Immediate="true" Label="Phone Number" Variant="Variant.Outlined" />
            <MudTextField @bind-Value="model.Email" For="@(() => model.Email)" Immediate="true" Label="Email" Variant="Variant.Outlined" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudSelect T="ClinicianTypeEnum" @bind-Value="model.ClinicianType" Label="Clinician Type" Variant="Variant.Outlined">
                @foreach (var value in Enum.GetValues(typeof(ClinicianTypeEnum)))
                {
                    <MudSelectItem Value="@value">@value</MudSelectItem>
                }
            </MudSelect>
            <MudSelect T="RegulatorTypeEnum" @bind-Value="model.RegulatorType" Label="Regulator Type" Variant="Variant.Outlined">
                @foreach (var value in Enum.GetValues(typeof(RegulatorTypeEnum)))
                {
                    <MudSelectItem Value="@value">@value</MudSelectItem>
                }
            </MudSelect>
            <MudTextField @bind-Value="model.LicenceNumber" For="@(() => model.LicenceNumber)" Immediate="true" Label="Licence Number" Variant="Variant.Outlined" />
        </MudItem>
    </MudGrid>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await Submit())">Submit</MudButton>
    </MudCardActions>
</MudForm>

@code {
    [Inject] ISnackbar Snackbar { get; set; } = default!;
    MudForm form = default!;
    ClinicianDto model = new ClinicianDto{
        AvatarImage = "",
        AvatarTitle = "",
        AvatarDescription = "",
        LicenceNumber = "",
        FirstName = "",
        LastName = "",
        Telephone = "",
        Email = ""
        };
    private async Task Submit()
    {
        await form.Validate();
        if (form.IsValid)
        {
            Snackbar.Add("Submitted!");
        }
    }
}
